/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ApplicationLayer;

import ModelLayer.DanceClass;
import ModelLayer.Manager;
import ModelLayer.Teacher;
import ModelLayer.Users;
import java.util.ArrayList;


//manager =3 
//teacher =2
//student =1
/**
 *
 * @author Jono
 */
public class ManagerLogic extends ApplicationLogic{
            
    /// uID is generated by web service.
    //needs to return an int
    public int registerUser(int userType, String uName,  String firstName, String lastName, String password, String email){
        
 //todo 
    //refactor classes to add email and password etc...
        Users newUser = null;
        
        if(userType == 2){
            
            //Hard code a wage for display purposes
            //Say 300$ on creation
            
            //// int uID, String uName
            newUser = new Teacher(2,uName);
        }
        else if(userType == 3){
            /// int uID, String uName, String firstName, String lastName 
            newUser = new Manager(3,uName, firstName, lastName);
        }
        
        if(newUser != null){
            super.model.dbWrite("RegisterUser", newUser);
        }
        
        //If successful 
        return 1;
    }
    
    public int removeUser (String userName, int userID) {
        ///TODO: Define instruction
        String instruction = "";
        
        ///TODO: implement function
        super.model.dbRemove(instruction);
        /// temp return
        return 1;
    }
    
    public int registerClass(String className,  int teacherID, int skillID, String classDesc, int maxAttend){
        //problem, database created with no times or dates. Not sure if we can get it
         
        DanceClass newClass = new DanceClass();
     
//        newClass.setStartTime(startTime);
//        newClass.setFinishTime(finishTime);
//        
        Teacher classTeacher = new Teacher(); 
        /// temp assignment; TODO: pull teacher from database and build here?
//        classTeacher.setuName(teacherName);
//        
        newClass.setTeacher(classTeacher);
//        
//        ///TODO: define instruction
        super.model.dbWrite("RegisterClass", newClass);
        
        return 1;// return 1 if successful
    }
    public int removeClass(String className){
        ///TODO: Define instruction
        String instruction = "";
        
        ///TODO: implement function
        super.model.dbRemove(instruction);
        
        /// temp return
        return 1;
    }
    
    public DanceClass viewClass(int index){
        return super.model.viewClass(index);
    }
    
    public ArrayList<DanceClass> viewClasses(){
        ArrayList<DanceClass> classes = new ArrayList<>();
        
        if(!super.model.getDanceClasses().isEmpty()){
            classes.addAll(super.model.getDanceClasses());
        }
        else{
            /// TODO: else if(){read in all classes}
        }          
        return classes;
    }
    
    //Need the code to pull all the teachers names (First names are fine)
    public String[] getAllTeachers(){
        String teacherList [] ={"Teacher1","Teacher2"};
 
        return teacherList;
    }
    
    public int getTeacherIDFromName(String tName){
        int teacherID =12;
        
        return teacherID;
    }
    
    public String[] getStudentList(){
        String studentList [] ={"student1","student2"};
       
        return studentList;
    }
    
    public String[] getAllClasses(){
        /// call local function
        ArrayList<DanceClass> allClasses = viewClasses();
        String classList [] =  new String[allClasses.size()];
        
        /// fill array with class names
        for(int i=0; i< classList.length; i++){
            classList[i] = allClasses.get(i).getClassName();
        }
        
        return classList;
    }
    
    //To delete a student a teacher or a class
    public int deleteSTC(String delVar, String delValue){ //delVar is the type and value is the value
        //delVar can be
            //"student" "teacher" "class"
            
            
            return 1;
    }
    
    //This data is related to the Reports Frame or functions
    public String[] returnStudentsInReports(){
        //I need a list of all the students inside the reports list in db
        String[] reportStudents = {"Student1","Student2"};
        
        return reportStudents;
    }
    
    public String[] caseData(String studentName){ //needs to return information related to a case based on a student name
        String [] caseData = {"Ryan the Teacher", "Dar the student","He was a bold boy"};
   
    return caseData;
    }
    
    
    
}


